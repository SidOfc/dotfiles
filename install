#!/usr/bin/env ruby

module Dotfiles
  SOURCE  = 'dotfiles'.freeze
  IGNORE  = %w[. .. .git].freeze

  module_function

  def list
    @@l ||= Dir.glob("#{Dir.home}/#{SOURCE}/\.*")
               .map    { |path|    path.split('/').last }
               .reject { |dotfile| IGNORE.include? dotfile }
  end

  def clean
    list.map do |dotfile|
      path = File.expand_path "~/#{dotfile}"

      File.delete path if File.exists? path
    end
  end

  def link
    list.map do |dotfile|
      dotf = "#{Dir.home}/#{dotfile}"
      src  = "#{Dir.home}/#{SOURCE}/#{dotfile}"

      system "ln -s #{src} #{dotf}" if !File.exists?(dotf) && File.exists?(src)
    end.all?
  end

  def link!
    clean && link
  end

  def force?
    @@f ||= ARGV.include?('-f') || ARGV.include?('--force')
  end

  def clean?
    @@c ||= ARGV.include?('-c') || ARGV.include?('--clean')
  end
end

if Dotfiles.clean?
  Dotfiles.clean
else
  Dotfiles.force? && Dotfiles.link! || Dotfiles.link
end
