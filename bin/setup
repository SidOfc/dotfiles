#!/usr/bin/env ruby

require 'fileutils'
require 'colorize'

# directories
SOURCE = File.expand_path './../'
HOME   = File.expand_path '~'
CONFIG = File.join HOME, '.config'
BIN    = File.join HOME, 'bin'
FISH   = File.join CONFIG, 'fish'
NVIM   = File.join CONFIG, 'nvim'

# files
GITIGNORE      = File.join SOURCE, '.gitignore'
RGIGNORE       = File.join SOURCE, '.rgignore'
TMUX_CONF      = File.join SOURCE, '.tmux.conf'
ASDFRC         = File.join SOURCE, '.asdfrc'
DEFAULT_GEMS   = File.join SOURCE, '.default-gems'
FISH_CONFIG    = File.join SOURCE, '.config', 'fish', 'config.fish'
FISH_FUNCTIONS = File.join SOURCE, '.config', 'fish', 'functions'
NVIM_CONFIG    = File.join SOURCE, '.config', 'nvim', 'init.vim'
BIN_CIU        = File.expand_path File.join(__dir__, 'ciu')
BIN_LPFMT      = File.expand_path File.join(__dir__, 'lpfmt')

# initialize ~/.config directories
FileUtils.mkdir_p BIN
FileUtils.mkdir_p FISH
FileUtils.mkdir_p NVIM

MAP = {
  HOME => [GITIGNORE, RGIGNORE, TMUX_CONF, ASDFRC, DEFAULT_GEMS],
  BIN  => [BIN_CIU, BIN_LPFMT],
  FISH => [FISH_CONFIG, FISH_FUNCTIONS],
  NVIM => [NVIM_CONFIG]
}

MAP.each do |(destination, targets)|
  targets.each do |source|
    target_dest = File.join destination, File.basename(source)

    if File.symlink?(target_dest) || File.exists?(target_dest) || !File.exists?(source)
      puts "==>".red + " [SKIP] ".yellow + target_dest.magenta
    else
      system "ln -Fs #{source} #{target_dest}"
      puts "==>".blue + " [LINK] ".green + target_dest.magenta
    end
  end
end
